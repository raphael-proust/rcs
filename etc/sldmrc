############################
### GLOBAL CONFIGURATION ###
############################

# List all WM binary names
wmlist=(dwm wmii)

# Allow console login?
allowconsole=yes

# Allow shutdown?
allowshutdown=yes
shutdowncommand='sudo shutdown -P now'
rebootcommand='sudo shutdown -r now'

# Allow suspend?
# Note that this option requires pm-utils
# to be installed and properly configured.
allowsuspend=no
suspendcommand='sudo pm-suspend'
allowhibernate=no
hibernatecommand='sudo pm-hibernate'

# Set configuration for specific users?
#userconfig=(courtney)

##########################
### USER CONFIGURATION ###
##########################

#courtney() {
#  # List user allowed WM binary names
#  wmbinlist=(openbox-session)
#
#  # List user allowed WM display names
#  wmdisplist=(Openbox)
#
#  # Allow console login?
#  allowconsole=yes
#
#  # Allow shutdown?
#  allowshutdown=no
#
#  # Set specific display for user
#  # (Not honored unless locktty=yes)
#  # display=1
#}

############################
### SYSTEM CONFIGURATION ###
############################

# Set default display
display=0

# Where should first X tty be spawned?
xtty=7

# Restrict tty? (By default, sldm increments X tty, this setting
# allows administrators to lock users into one specific tty by
# setting the display=N option on a per-user basis.)
locktty=no

# Enable login shell (fixes issues with some keymaps, uses bash).
# Note that your bash scripts won't have any terminal as stdin when
# started in this way. This may break some commands, including stty,
# unless you explicitly check for [ -t 0 ] or that every login shell
# is also interactive. However, we're sending stdout and stderr to
# /dev/null, so you won't see the complaints.
loginshell=yes

# Additional arguments to pass to X server
# When usexinit=yes, we use ~/.xinitrc when it exists or /etc/X11/xinit/xinitrc
# when it doesn't. These are passed the chosen window manager as $1; note that
# the stock /etc/X11/xinit/xinitrc ignores this and always starts twm and three
# xterms. Your custom xinitrc should start the window manager supplied as $1
# instead. There is a sample xinitrc included at /usr/share/sldm/xinitrc.skel.
# If usexinit=no, then we instead call the chosen window manager directly.
usexinit=yes

# Additional arguments to pass to X server; it will be called as:
#  exec /usr/bin/X :$display $serverargs vt$((xtty+display))
serverargs="-nolisten tcp -dpi 96"
